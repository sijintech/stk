name: Publish pyqt to PyPI and TestPyPI
on:  # 这里我设置了两个事件，一般的push tag以v开头，用来测试发布，而release用来正式发布
  release:
    types: [published]
  push:
    # Alternative: only build for tags.
    tags:
      - 'v*'
jobs:
    build_wheels:  
        name: Build wheels on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix: 
                os: [ubuntu-latest, windows-latest]  # 没有macos，因为我的编译没通过。。。
        steps:

        - uses: actions/checkout@v4
          with:
                submodules: 'recursive'
        - name: get tag
          run: |
                echo "TAG=$(echo $GITHUB_REF | sed 's|refs/tags/v||')" >> $GITHUB_ENV
    
        - name: fix tauri version
          run : |
                    pip install toml
                    python apps/template/pyqt/fix_version.py
        - name: build wheels
          uses: pypa/cibuildwheel@v2.16.5
          env:
                CIBW_BUILD_FRONTEND: build
                CIBW_SKIP: "*-win32 *-manylinux_i686 pp*"  # 按照这里的设置，所有允许的python版本都要执行64位编译

        - uses: actions/upload-artifact@v4
          with:
                name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
                path: apps/template/pyqt/dist/*.whl

    build_sdist:  # 源代码打包单平台即可
        name: Build source distribution
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
            
        - name: Build sdist
          run: |
            cd apps/template/pyqt       
            pwd
            pipx run build --sdist
            
        - uses: actions/upload-artifact@v4
          with:
            name: cibw-sdist
            path:  apps/template/pyqt/dist/*.tar.gz

    upload:  # 上传到PyPI
        needs: [build_wheels, build_sdist]
        runs-on: ubuntu-latest 
        environment: pypi
        permissions:
              id-token: write  
        steps:
            - uses: actions/download-artifact@v4  
              with:
                # unpacks all CIBW artifacts into dist/
                pattern: cibw-*
                path: dist
                merge-multiple: true
        
            - name: publish to Test PyPI
              uses: pypa/gh-action-pypi-publish@v1.8.12
              with:
                repository-url: https://test.pypi.org/legacy/
                packages-dir: dist/
                skip-existing: true
                password: ${{secrets.PYPI_API_TOKEN}}
                user: __token__
        
            - name: publish to PYPI
              if: github.event_name == 'release' && github.event.action == 'published'  
              uses: pypa/gh-action-pypi-publish@v1.8.12
              with:
                packages-dir: dist/    
                
                