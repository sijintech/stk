
name: Build and Release App

on:
  push:
    tags:
      - 'v*'

jobs:
  ubuntu_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Get tag
        id: get_tag
        run: |
          echo "TAG=$(echo $GITHUB_REF | sed 's|refs/tags/v||')" >> "$GITHUB_ENV"

      - name: Setup virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate

      - name: Build executable
        run: |
          python -m pip install -U pip
          python apps/template/pyqt/scripts/run_write_version.py
          cd apps/template/pyqt/src
          pip install pyinstaller
          pip install PySide6
          pip install matplotlib
          pip install pandas
          pip install numpy
          pip install requests          
          pip install toml
          pyinstaller ./confs/main.spec
          cd dist
          ls

      - name: Store dist
        uses: actions/upload-artifact@v3
        with:
          name: stk_ubuntu
          path: apps/template/pyqt/src/dist/stk_ubuntu

  macOS_build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: get tag
        id: get_tag
        run: |
          echo "TAG=$(echo $GITHUB_REF | sed 's|refs/tags/v||')" >> "$GITHUB_ENV"

      - name: Setup virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
      - name: build exe
        run: |
          python -m pip install -U pip
          python apps/template/pyqt/scripts/run_write_version.py
          cd apps/template/pyqt/src
          pip install pyinstaller
          pip install PySide6
          pip install matplotlib
          pip install pandas
          pip install numpy
          pip install requests
          pip install toml
          pyinstaller ./confs/main.spec
          cd dist
          ls

      - name: Store dist
        uses: actions/upload-artifact@v3
        with:
          # 上传后的标记名，下载依靠它找到对应文件
          name: stk_macos
          # 上传的文件位置
          path: apps/template/pyqt/src/dist/stk_macos

  windows_build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: get tag
        id: get_tag
        run: |
          echo "TAG=$(echo $GITHUB_REF | sed 's|refs/tags/v||')" >> "$GITHUB_ENV"

      - name: Setup virtual environment
        run: |
          python -m venv .venv
          . .venv\Scripts\activate


      - name: build exe
        run: |
          python.exe -m pip install -U pip
          python apps\template\pyqt\scripts\run_write_version.py
          cd apps\template\pyqt\src
          pip install pyinstaller
          pip install PySide6
          pip install vtk
          pip install matplotlib
          pip install pandas
          pip install numpy
          pip install requests
          pip install toml
          pyinstaller .\confs\main.spec
          
          
          # - name: Install NSIS
          #   run: |
          # iwr -useb get.scoop.sh -outfile 'install.ps1' # 从 get.scoop.sh 下载 install.ps1 脚本
          # .\install.ps1 -RunAsAdmin # 以管理员权限运行 install.ps1 脚本
          # scoop update
          # scoop bucket add extras

        # scoop install nsis
      - name: build app
        run: |
          makensis apps\template\pyqt\src\build_nsis.nsi
          cd apps\template\pyqt\src\dist
          ls
      # - name: Upload files to OSS(window)
      #   env:
      #     OSS_ENDPOINT: oss-cn-beijing.aliyuncs.com
      #     OSS_ACCESS_KEY_ID: ${{ secrets.KEY }}
      #     OSS_ACCESS_KEY_SECRET: ${{ secrets.SECRET }}
      #     OSS_BUCKET: sijin-suan-update
      #     # 指定要上传的文件或目录
      #     SOURCE_DIR: '../src/dist'
      #     # 指定OSS中的目标目录
      #     TARGET_DIR: 'nsis/'
      #   run: |
      #     pwd
      #     pip install oss2
      #     python apps\template\pyqt\scripts\deploy.py
      #     python apps\template\pyqt\scripts\update.py

      - name: Store dist
        uses: actions/upload-artifact@v3
        with:
          # 上传后的标记名，下载依靠它找到对应文件
          name: stk_windows
          # 上传的文件位置
          path: apps/template/pyqt/src/dist/stk_nsis.exe
  release:
    needs:
      - windows_build
      - macOS_build
      - ubuntu_build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: get tag
        id: get_tag
        run: |
          echo "TAG=$(echo $GITHUB_REF | sed 's|refs/tags/v||')" >> "$GITHUB_OUTPUT"
          echo "The TAG is $steps.get_tag.outputs.TAG"

      - name: Create Release
        if: github.event_name == 'push'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

        with:
          tag_name: ${{ steps.get_tag.outputs.TAG }}
          release_name: ${{ steps.get_tag.outputs.TAG}}
          # body: |
          #   Release  ${{ steps.get_tag.outputs.TAG }}
          # draft: true
          # prerelease: false

      - name: Download ubuntu app
        uses: actions/download-artifact@v3
        with:
          # 要下载的文件的标记
          name: stk_ubuntu
          # 下载到哪个目录（注意是/而不是\,否则报错）
          path: apps/template/pyqt/src/dist/

      - name: Download windows app
        uses: actions/download-artifact@v3
        with:
          # 要下载的文件的标记
          name: stk_windows
          # 下载到哪个目录（注意是/而不是\,否则报错）
          path: apps/template/pyqt/src/dist/

      - name: Download macOS app
        uses: actions/download-artifact@v3
        with:
          # 要下载的文件的标记
          name: stk_macos
          # 下载到哪个目录（注意是/而不是\,否则报错）
          path: apps/template/pyqt/src/dist/
      - run: |
          cd apps/template/pyqt/src/dist/
          ls

      - name: release ubuntu app
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apps/template/pyqt/src/dist/stk_ubuntu
          asset_name: stk_ubuntu
          asset_content_type: application/octet-stream

      - name: release windows app
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apps/template/pyqt/src/dist/stk_nsis.exe
          asset_name: stk_windows.exe
          asset_content_type: application/octet-stream

      - name: release macOS app
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apps/template/pyqt/src/dist/stk_macos
          asset_name: stk_macos
          asset_content_type: application/octet-stream

